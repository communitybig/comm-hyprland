post_install() {
    echo "Initializing system configuration..."

    # Enable SDDM
    echo "Enabling SDDM..."
    systemctl enable sddm

    # Create the 'sddm' user if it doesn't exist
    if ! id "sddm" &>/dev/null; then
        echo "Creating SDDM user..."
        useradd -r -s /usr/bin/nologin -M -d /var/lib/sddm sddm
    else
        echo "SDDM user already exists, skipping creation."
    fi

    # Ensure SDDM directory exists with correct permissions
    echo "Setting up SDDM directory..."
    mkdir -p /var/lib/sddm
    chown -R sddm:sddm /var/lib/sddm

    # Configure dotfiles and user settings
    echo "Setting up dotfiles symlinks..."
    user=$(awk -F: '$3 >= 1000 && $3 < 65000 { print $1; exit }' /etc/passwd)
    user_home=$(getent passwd "$user" | cut -d: -f6)
    dotfiles_dir="$user_home/dotfiles"

    # Copy dotfiles if they don't exist
    if [ ! -d "$dotfiles_dir" ]; then
        echo "Copying dotfiles to $user_home..."
        cp -r /etc/skel/dotfiles "$user_home/"
        chown -R "$user:$user" "$dotfiles_dir"
        chmod -R 700 "$dotfiles_dir"
    fi

    # Ensure necessary directories exist
    mkdir -p "$user_home/.backup" "$user_home/.config"
    chown "$user:$user" "$user_home/.backup" "$user_home/.config"

    # Create symlinks for home directory files
    for file in .bashrc .gtkrc-2.0 .Xresources; do
        if [ -e "$user_home/$file" ] && [ ! -L "$user_home/$file" ]; then
            echo "Backing up existing $file..."
            mv "$user_home/$file" "$user_home/.backup/$file"
        fi
        ln -sf "$dotfiles_dir/$file" "$user_home/$file"
    done
    
    chown -h "$user:$user" "$user_home/.gtkrc-2.0" "$user_home/.Xresources"

    # Create symlinks for configuration directories
    config_dirs=(bashrc dunst fastfetch gtk-3.0 gtk-4.0 hypr kitty ml4w nvim nwg-dock-hyprland ohmyposh qt6ct rofi swaync vim wal waybar waypaper wlogout xsettingsd)
    for dir in "${config_dirs[@]}"; do
        if [ -e "$user_home/.config/$dir" ] && [ ! -L "$user_home/.config/$dir" ]; then
            echo "Backing up existing ~/.config/$dir..."
            mv "$user_home/.config/$dir" "$user_home/.backup/$dir"
        fi
        ln -sf "$dotfiles_dir/.config/$dir" "$user_home/.config/$dir"
    done

    chown -hR "$user:$user" "$user_home/.config/"

    # Apply wallpaper using Pywal
    if command -v wal &>/dev/null; then
        echo "Applying wallpaper using Pywal for user: $user"
        sudo -u "$user" wal -i /usr/share/backgrounds/community/animal-hpr-001.jpg
    else
        echo "Warning: 'wal' command not found. Skipping wallpaper setup."
    fi

    # Install GNOME Platform runtime globally
    echo "Installing GNOME Platform runtime..."
    flatpak install -y org.gnome.Platform/x86_64/47

    # Configure Nautilus
    echo "Configuring Nautilus..."
    if glib-compile-schemas /usr/share/glib-2.0/schemas/; then
        echo "Nautilus schemas compiled successfully!"
    else
        echo "Warning: Failed to compile Nautilus schemas. Some features may not work correctly."
    fi

    # Install local Flatpak applications
    echo "Installing local Flatpak apps..."
    flatpak_dir="/etc/skel/dotfiles/flatpak"
    for app in calendar welcome settings sidebar; do
        flatpak_file="$flatpak_dir/com.ml4w.${app}.flatpak"
        if [ -f "$flatpak_file" ]; then
            sudo -u "$user" bash -c "flatpak install --user -y '$flatpak_file'"
            echo ":: com.ml4w.${app}.flatpak installed"
        else
            echo "Warning: $flatpak_file not found, skipping..."
        fi
    done

    echo "Flatpak applications installed successfully!"

    # Countdown before reboot
    echo "Installation complete. Rebooting in 10 seconds..."
    for i in {10..1}; do
        echo -n "$i..."
        sleep 1
    done
    echo " Now!"
    reboot
}

post_remove() {
    echo "Removing symlinks and restoring backups..."
    user=$(awk -F: '$3 >= 1000 && $3 < 65000 { print $1; exit }' /etc/passwd)
    user_home=$(getent passwd "$user" | cut -d: -f6)

    # Restore home directory files
    for file in .bashrc .gtkrc-2.0 .Xresources .zshrc; do
        if [ -L "$user_home/$file" ]; then
            rm "$user_home/$file"
            [ -e "$user_home/.backup/$file" ] && mv "$user_home/.backup/$file" "$user_home/$file"
        fi
    done

    # Restore configuration directories
    config_dirs=(bashrc dunst fastfetch gtk-3.0 gtk-4.0 hypr kitty ml4w nvim nwg-dock-hyprland ohmyposh qt6ct rofi swaync vim wal waybar waypaper wlogout xsettingsd)
    for dir in "${config_dirs[@]}"; do
        if [ -L "$user_home/.config/$dir" ]; then
            rm "$user_home/.config/$dir"
            [ -e "$user_home/.backup/$dir" ] && mv "$user_home/.backup/$dir" "$user_home/.config/$dir"
        fi
    done

    # Reload .bashrc for the user
    if [ -f "$user_home/.bashrc" ]; then
        echo "Reloading .bashrc for user: $user"
        sudo -u "$user" bash -c "source $user_home/.bashrc"
    fi

    echo "Symlinks removed, backups restored, and .bashrc reloaded for user: $user!"
}
