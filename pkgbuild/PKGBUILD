# Maintainer: Leonardo Berbert <leo4berbert@gmail.com>
# Contributor: Vilmar Catafesta <vcatafesta@gmail.com>
# Contributor: Stephan Raabe
# Upstream: https://github.com/mylinuxforwork/dotfiles

pkgname=comm-hyprland
pkgdesc="Meta package for Hyprland"
pkgver=$(date +%Y%m%d)
pkgrel=$(date +%H%M)
arch=('any')
license=('MIT')
url="https://github.com/communitybig/${pkgname}"
source=("git+${url}.git")
md5sums=('SKIP')
depends=(
	ml4w-hyprland
	nwg-dock-hyprland
	waybar
	hyprshade
	waypaper
	swaync
)
optdepends=(
	auto-tweaks-browser
	comm-base-config
	evince
	eog
	papers
	amberol
	p7zip
	cmatrix
	go
	base-devel
	btop
	comm-wallpapers-hyprland
	fastfetch
	xdg-desktop-portal-gtk
	eza
	python-pip
	python-gobject
	python-screeninfo
	tumbler
	brightnessctl
	nm-connection-editor
	network-manager-applet
	gtk4
	libadwaita
	fuse2
	imagemagick
	jq
	xclip
	kitty
	neovim
	htop
	python-pywal
	pinta
	blueman
	grim
	slurp
	cliphist
	nwg-look
	qt6ct
	rofi-wayland
	polkit-gnome
	polkit
	meld
	zsh
	zsh-completions
	fzf
	pavucontrol
	papirus-icon-theme
	breeze
	flatpak
	gvfs
	wlogout
	pinta
	grimblast-git
	bibata-cursor-theme
	pacseek
	otf-font-awesome
	ttf-fira-sans
	ttf-fira-code
	ttf-firacode-nerd
	ttf-hack-nerd
	ttf-dejavu
	oh-my-posh-bin
	checkupdates-with-aur
	loupe
	firefox
	nautilus
	nautilus-open-any-terminal
	nautilus-admin
	nautilus-empty-file
	nautilus-image-converter
	nautilus-share
	gnome-text-editor
	gnome-calculator
	loupe
	mpv
	imv
	ffmpegthumbnailer
	wireplumber
	sddm
	qt5-svg
	qt5-graphicaleffects
	qt5-quickcontrols2
	#Audio Dependencies
	biglinux-meta-audio-config
	portaudio
	lib32-portaudio
	pipewire-alsa
	pipewire-pulse
	manjaro-pipewire
	libsndfile
	lib32-libsndfile
	xf86-input-elographics
	xf86-input-evdev
	xf86-input-libinput
	xf86-input-vmmouse
	xf86-input-void
	timeshift
	grub-btrfs-timeshift
	grub-btrfs
	mhwd
	mhwd-db
	umc
	libxcvt
	b43-fwcutter
	glxinfo
	# Add
	clang
	gnu-free-fonts
	harfbuzz-icu
	hyphen
	inotify-tools
	inxi
	libavif
	lsof
	ncdu
	sysstat
	#jack2
	#lib32-jack2
)

if [ -e "${pkgname}.install" ]; then
	install=${pkgname}.install
elif [ -e "pkgbuild.install" ]; then
	install=pkgbuild.install
fi

package() {
	cd "${srcdir}/${pkgname}"

  mkdir -p "${pkgdir}/usr/share/${pkgname}"
  printf "%s\n" "${optdepends[@]}" > "${pkgdir}/usr/share/${pkgname}/optdepends"

	# Determine the correct source directory
	if [ -d "${pkgname}" ]; then
		srcdir="${srcdir}/${pkgname}/${pkgname}"
	else
		srcdir="${srcdir}/${pkgname}"
	fi

	# Install files
	local dirs=("usr" "etc" "opt")
	for dir in "${dirs[@]}"; do
		if [ -d "${srcdir}/${dir}" ]; then
			cp -a "${srcdir}/${dir}" "${pkgdir}/"
		fi
	done

	# Install license file if present
	if [ -f "LICENSE" ]; then
		install -Dm644 LICENSE "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
	fi

	# Install documentation if present
	if [ -f "README.md" ]; then
		install -Dm644 README.md "${pkgdir}/usr/share/doc/${pkgname}/README.md"
	fi
}
